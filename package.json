{
  "type": "module",
  "scripts": {
    "check-chain": "pnpm ts-node eth_chainId/checkBundlerChainId.ts",
    "supported-entrypoints": "pnpm ts-node eth_supportedEntryPoints/supportedEntryPoints.ts",
    "get-userop": "pnpm ts-node eth_getUserOperationByHash/getUserOperationByHash.ts",
    "get-receipt": "pnpm ts-node eth_getUserOperationReceipt/getUserOperationReceipt.ts",
    "max-priority-fee": "pnpm ts-node eth_maxPriorityFeePerGas/maxPriorityFeePerGas.ts",
    "userop-gas-price": "pnpm ts-node eth_getUserOperationGasPrice/getUserOperationGasPrice.ts",
    "send-userop-1balance": "pnpm ts-node eth_sendUserOperation/1Balance/SponsoredGas.ts",
    "send-userop-native": "pnpm ts-node eth_sendUserOperation/Native-Payments/NativeGasPayments.ts",
    "send-userop-onchain-sponsored": "pnpm ts-node eth_sendUserOperation/OnChain-Paymasters/SponsoredGas.ts",
    "send-userop-erc20": "pnpm ts-node eth_sendUserOperation/OnChain-Paymasters/Erc20GasPayments.ts",
    "estimate-gas-1balance": "pnpm ts-node eth_estimateUserOperationGas/1Balance/SponsoredGas.ts",
    "estimate-gas-native": "pnpm ts-node eth_estimateUserOperationGas/Native-Payments/NativeGasPayments.ts",
    "estimate-gas-onchain-sponsored": "pnpm ts-node eth_estimateUserOperationGas/OnChain-Paymasters/SponsoredGas.ts",
    "estimate-gas-erc20": "pnpm ts-node eth_estimateUserOperationGas/OnChain-Paymasters/Erc20GasPayments.ts",
    "run-all-endpoints": "pnpm ts-node run-all-endpoints.ts"
  },
  "dependencies": {
    "@circle-fin/modular-wallets-core": "^1.0.9",
    "@gelatonetwork/smartwallet": "^0.0.16",
    "dotenv": "^17.0.1",
    "tslib": "^2.8.1",
    "viem": "^2.29"
  },
  "devDependencies": {
    "@types/node": "^24.0.10"
  },
  "packageManager": "pnpm@10.10.0+sha512.d615db246fe70f25dcfea6d8d73dee782ce23e2245e3c4f6f888249fb568149318637dca73c2c5c8ef2a4ca0d5657fb9567188bfab47f566d1ee6ce987815c39"
}
